     /**
     * @inheritDoc
     */
    public function getSumChargedPercent(int $loanId, ?DateTimeInterface $date = null): int
    {
        $date ??= new DateTimeImmutable();

        if ($date < $date->setTime(0, 10)) {
            $date = $date->modify('-1 days');
        }

        $sql = 'SELECT SUM(`sum`) FROM `charge` WHERE `type` = :type AND `charge_date` = :date 
                AND `loan_history_id` IN (SELECT `id` FROM `loan_history` WHERE `loan_id` = :loanId)';

        $params = [
            ':type' => Charge::CHARGE,
            ':date' => $date->format(DateFmt::D_DB),
            ':loanId' => $loanId,
        ];

        $query = $this->pdo->prepare($sql);
        $query->execute($params);

        return (int)$query->fetchColumn();
    }
    
    
    
    /**
     * @inheritdoc
     */
    public function sumIncomingToDate(DateTimeInterface $date, string $destination, int $loanId): Money
    {
        $sql = 'SELECT SUM(`sum`) FROM `incoming_transfer` 
                WHERE `destination` = :destination AND `payment_date` <= :endDate AND `loan_id` = :loanId';

        $params = [
            ':endDate' => $date->format(DateFmt::DT_DB),
            ':loanId' => $loanId,
            ':destination' => $destination,
        ];

        $query = $this->pdo->prepare($sql);
        $query->execute($params);

        return Money::fromRub((int)$query->fetchColumn());
    }
